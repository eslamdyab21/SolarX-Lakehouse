apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-master-deployment
  namespace: lakehouse
  labels:
    app: spark-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spark-master
  template:
    metadata:
      labels:
        app: spark-master
    spec:
      hostAliases:
      - ip: "10.97.11.170"
        hostnames:
        - "warehouse.minio"
      containers:
      - name: spark-master
        image: tabulario/spark-iceberg
        ports:
        - containerPort: 7077
        - containerPort: 8080
        - containerPort: 8081
        - containerPort: 10000
        - containerPort: 10001
        - containerPort: 4040
        - containerPort: 4041
        - containerPort: 5000
        - containerPort: 5001
        - containerPort: 5002
        - containerPort: 5003
        - containerPort: 5004
        - containerPort: 5005
        - containerPort: 5006
        - containerPort: 5007
        - containerPort: 5008
        - containerPort: 5009
        - containerPort: 5010

        volumeMounts:
        - mountPath: /home/iceberg/warehouse
          name: lakehouse-spark
        - mountPath: /home/iceberg/notebooks/notebooks
          name: notebooks-spark
        - mountPath: /home/iceberg/etl_scripts
          name: spark-etls

        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: AWS_ACCESS_KEY_ID
        - name: AWS_REGION
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: AWS_REGION
        - name: SPARK_MODE
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: SPARK_MODE_MASTER 
        - name: REST_API_URL
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: REST_API_URL 
        - name: MINIO_ENDPOINT
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: MINIO_ENDPOINT 
        - name: MINIO_ACCESS_KEY
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: MINIO_ROOT_USER 
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: spark-secret
              key: AWS_SECRET_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: spark-secret
              key: MINIO_ROOT_PASSWORD
        
              
      volumes:
      - name: lakehouse-spark
        hostPath:
          path: /tmp/solarx/lakehouse/spark
          type: Directory
      - name: notebooks-spark
        hostPath:
          path: /tmp/solarx/notebooks
          type: Directory
      - name: spark-etls
        hostPath:
          path: /tmp/solarx/spark_etls
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: spark-master-service
  namespace: lakehouse
spec:
  selector:
    app: spark-master
  ports:
    - name: p1
      protocol: TCP
      port: 7077
      targetPort: 7077
    - name: p2
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: p22
      protocol: TCP
      port: 8081
      targetPort: 8081
    - name: p3
      protocol: TCP
      port: 10000
      targetPort: 10000
    - name: p4
      protocol: TCP
      port: 10001
      targetPort: 10001
    - name: p5
      protocol: TCP
      port: 4040
      targetPort: 4040
    - name: p6
      protocol: TCP
      port: 4041
      targetPort: 4041
    - name: p10
      protocol: TCP
      port: 5000
      targetPort: 5000
    - name: p11
      protocol: TCP
      port: 5001
      targetPort: 5001
    - name: p12
      protocol: TCP
      port: 5002
      targetPort: 5002
    - name: p13
      protocol: TCP
      port: 5003
      targetPort: 5003
    - name: p14
      protocol: TCP
      port: 5004
      targetPort: 5004
    - name: p15
      protocol: TCP
      port: 5005
      targetPort: 5005
    - name: p16
      protocol: TCP
      port: 5006
      targetPort: 5006
    - name: p17
      protocol: TCP
      port: 5007
      targetPort: 5007
    - name: p18
      protocol: TCP
      port: 5008
      targetPort: 5008
    - name: p19
      protocol: TCP
      port: 5009
      targetPort: 5009
    - name: p20
      protocol: TCP
      port: 5010
      targetPort: 5010
---





apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-worker-deployment
  namespace: lakehouse
  labels:
    app: spark-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spark-worker
  template:
    metadata:
      labels:
        app: spark-worker
    spec:
      hostAliases:
      - ip: "10.97.11.170"
        hostnames:
        - "warehouse.minio"
      containers:
      - name: spark-worker
        image: tabulario/spark-iceberg
        ports:
        - containerPort: 7078
        - containerPort: 8080
        - containerPort: 8081
        - containerPort: 5000
        - containerPort: 5001
        - containerPort: 5002
        - containerPort: 5003
        - containerPort: 5004
        - containerPort: 5005
        - containerPort: 5006
        - containerPort: 5007
        - containerPort: 5008
        - containerPort: 5009
        - containerPort: 5010

        volumeMounts:
        - mountPath: /home/iceberg/warehouse
          name: lakehouse-spark
        - mountPath: /home/iceberg/etl_scripts
          name: spark-etls
        - mountPath: /opt/spark/spark_workers.sh
          name: spark-worker-bash

        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: AWS_ACCESS_KEY_ID
        - name: AWS_REGION
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: AWS_REGION
        - name: SPARK_MODE
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: SPARK_MODE_WORKER 
        - name: SPARK_MASTER_URL
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: SPARK_MASTER_URL 
        - name: SPARK_WORKER_CORES
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: SPARK_WORKER_CORES 
        - name: SPARK_WORKER_MEMORY
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: SPARK_WORKER_MEMORY
        - name: REST_API_URL
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: REST_API_URL 
        - name: MINIO_ENDPOINT
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: MINIO_ENDPOINT 
        - name: MINIO_ACCESS_KEY
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: MINIO_ROOT_USER 
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: spark-secret
              key: AWS_SECRET_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: spark-secret
              key: MINIO_ROOT_PASSWORD

      volumes:
      - name: lakehouse-spark
        hostPath:
          path: /tmp/solarx/lakehouse/spark
          type: Directory
      - name: spark-etls
        hostPath:
          path: /tmp/solarx/spark_etls
          type: Directory
      - name: spark-worker-bash
        hostPath:
          path: /tmp/solarx/spark_workers.sh
          type: File
---
apiVersion: v1
kind: Service
metadata:
  name: spark-worker-service
  namespace: lakehouse
spec:
  selector:
    app: spark-worker
  ports:
    - name: p1
      protocol: TCP
      port: 7078
      targetPort: 7078
    - name: p2
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: p3
      protocol: TCP
      port: 8081
      targetPort: 8081
    - name: p10
      protocol: TCP
      port: 5000
      targetPort: 5000
    - name: p11
      protocol: TCP
      port: 5001
      targetPort: 5001
    - name: p12
      protocol: TCP
      port: 5002
      targetPort: 5002
    - name: p13
      protocol: TCP
      port: 5003
      targetPort: 5003
    - name: p14
      protocol: TCP
      port: 5004
      targetPort: 5004
    - name: p15
      protocol: TCP
      port: 5005
      targetPort: 5005
    - name: p16
      protocol: TCP
      port: 5006
      targetPort: 5006
    - name: p17
      protocol: TCP
      port: 5007
      targetPort: 5007
    - name: p18
      protocol: TCP
      port: 5008
      targetPort: 5008
    - name: p19
      protocol: TCP
      port: 5009
      targetPort: 5009
    - name: p20
      protocol: TCP
      port: 5010
      targetPort: 5010
---




apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-deployment
  namespace: lakehouse
  labels:
    app: rest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest
  template:
    metadata:
      labels:
        app: rest
    spec:
      hostAliases:
      - ip: "10.97.11.170"
        hostnames:
        - "warehouse.minio"
      containers:
      - name: rest
        image: apache/iceberg-rest-fixture
        ports:
        - containerPort: 8181

        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: AWS_ACCESS_KEY_ID
        - name: AWS_REGION
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: AWS_REGION
        - name: CATALOG_WAREHOUSE
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: CATALOG_WAREHOUSE 
        - name: CATALOG_IO__IMPL
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: CATALOG_IO__IMPL 
        - name: CATALOG_S3_ENDPOINT
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: CATALOG_S3_ENDPOINT
        - name: MINIO_ENDPOINT
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: MINIO_ENDPOINT 
        - name: CATALOG_S3_PATH__STYLE__ACCESS
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: CATALOG_S3_PATH__STYLE__ACCESS 
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: spark-secret
              key: AWS_SECRET_ACCESS_KEY
---
apiVersion: v1
kind: Service
metadata:
  name: rest
  namespace: lakehouse
spec:
  selector:
    app: rest
  ports:
    - protocol: TCP
      port: 8181
      targetPort: 8181


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: lakehouse
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio
        ports:
        - containerPort: 9000
        - containerPort: 9001

        env:
        - name: MINIO_ROOT_USER
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: MINIO_ROOT_USER
        - name: MINIO_DOMAIN
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: MINIO_DOMAIN
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: spark-secret
              key: MINIO_ROOT_PASSWORD

        command: ["minio"]
        args: ["server", "/data", "--console-address", ":9001"]
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: lakehouse
spec:
  clusterIP: 10.97.11.170
  selector:
    app: minio
  ports:
    - name: p1
      protocol: TCP
      port: 9000
      targetPort: 9000
    - name: p2
      protocol: TCP
      port: 9001
      targetPort: 9001
---




apiVersion: apps/v1
kind: Deployment
metadata:
  name: mc-deployment
  namespace: lakehouse
  labels:
    app: mc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mc
  template:
    metadata:
      labels:
        app: mc
    spec:
      containers:
      - name: mc
        image: minio/mc

        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: AWS_ACCESS_KEY_ID
        - name: AWS_REGION
          valueFrom: 
            configMapKeyRef:
              name: spark-config
              key: AWS_REGION
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: spark-secret
              key: AWS_SECRET_ACCESS_KEY

        command: ["/bin/sh", "-c"]
        args:
        - |
          until (/usr/bin/mc config host add minio $MINIO_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY) do
            echo '...waiting...' && sleep 1;
          done;
          /usr/bin/mc mb --ignore-existing minio/warehouse;
          /usr/bin/mc policy set public minio/warehouse;
          tail -f /dev/null;